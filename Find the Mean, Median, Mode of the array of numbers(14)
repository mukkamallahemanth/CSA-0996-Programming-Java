import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class MeanMedianMode {
    public static void main(String[] args) {
        // Sample Input
        double[] numbers = {16, 18, 27, 16, 23, 21, 19};

        // Calculate and print the mean
        double mean = calculateMean(numbers);
        System.out.println("Mean = " + mean);

        // Calculate and print the median
        double median = calculateMedian(numbers);
        System.out.println("Median = " + median);

        // Calculate and print the mode
        double mode = calculateMode(numbers);
        System.out.println("Mode = " + mode);
    }

    public static double calculateMean(double[] numbers) {
        double sum = 0;
        for (double num : numbers) {
            sum += num;
        }
        return sum / numbers.length;
    }

    public static double calculateMedian(double[] numbers) {
        Arrays.sort(numbers);
        int n = numbers.length;

        if (n % 2 == 0) {
            // If the number of elements is even, calculate the average of the middle two numbers
            return (numbers[n / 2 - 1] + numbers[n / 2]) / 2.0;
        } else {
            // If the number of elements is odd, return the middle number
            return numbers[n / 2];
        }
    }

    public static double calculateMode(double[] numbers) {
        Map<Double, Integer> frequencyMap = new HashMap<>();

        for (double num : numbers) {
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
        }

        double mode = 0;
        int maxFrequency = 0;

        for (Map.Entry<Double, Integer> entry : frequencyMap.entrySet()) {
            if (entry.getValue() > maxFrequency) {
                maxFrequency = entry.getValue();
                mode = entry.getKey();
            }
        }

        return mode;
    }
}
